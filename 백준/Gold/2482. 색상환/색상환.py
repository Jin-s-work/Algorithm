

# 서로 이웃하지 않은 색들을 선택하는 경우의 수
# n개의 색으로 구성되어있는 색상환에서 어떤 인접한 두 색도 동시에 선택하지 않으면서
# 서로 다른 k개의 색을 선택하는 경우의 수

n = int(input())
k = int(input())


## dp[i][k] : i번째 색까지 고려했을때, k개의 색을 선택할 때의 경우의 수
# 첫번째 색과 마지막 색도 연결되어있기에 경우를 나누어야 한다.
# 1. 첫 번째를 선택한 경우
# 2. 첫 번째를 선택하지 않은 경우
      
mod = 1000000003
dp = [[0] * (k + 1) for _ in range(n + 1)]
for i in range(n + 1):
    dp[i][0] = 1   # 0개의 색을 고르는 경우는 1가지
    dp[i][1] = i   # 1개의 색을 고르는 경우는 i가

for i in range(2, n + 1):
    for j in range(2, k + 1):
        dp[i][j] = (dp[i-2][j-1] + dp[i-1][j]) % mod

ans = dp[n-1][k] + dp[n-3][k-1]
print(ans % mod)
# 첫번째 색을 선택하지 않은 경우 + 첫 번째 색을 선택한 경우 (마지막 색은 선택 불가)
# dp[n-1][k] : 첫번째 색을 선택하지 않은 경우 -> n-1개의 색에서 k개의 색을 고르는 경우의 수
#              이 경우에 첫번째 색이 선택되지 않았기에 마지막 색상도 자유롭게 선택 가능
# dp[n-3][k-1] : 첫번째 색을 선택하였으므로 인접한 마지막 색은 선택할 수 없다.
#                n-3 : 첫번째 색을 선택했기 때문에 n-1에서 두번째와 마지막 색을 제외한 나머지
#
