
SELECT A.NAME, A.DATETIME
FROM ANIMAL_INS A LEFT JOIN ANIMAL_OUTS B
ON A.ANIMAL_ID = B.ANIMAL_ID
WHERE A.DATETIME IS NOT NULL AND B.DATETIME IS NULL
ORDER BY A.DATETIME 
LIMIT 3















# SELECT A.NAME, A.DATETIME
# FROM ANIMAL_INS A
# LEFT JOIN ANIMAL_OUTS B
# ON A.ANIMAL_ID = B.ANIMAL_ID
# WHERE A.DATETIME IS NOT NULL AND B.DATETIME IS NULL
# ORDER BY A.DATETIME
# LIMIT 3
# # B에 없는 A에서 찾는 것이므로 LEFT JOIN을 꼭 해야 한다.

# SELECT A.NAME, A.DATETIME
# FROM ANIMAL_INS A
#     LEFT JOIN ANIMAL_OUTS B
# ON A.ANIMAL_ID = B.ANIMAL_ID
# WHERE B.DATETIME IS NULL
# ORDER BY A.DATETIME
# LIMIT 3;

# -- LEFT JOIN을 해야하는 것은 오른쪽에서 오는 ANIMAL_OUTS가 없는 상태더라도 
# -- LEFT JOIN으로 붙어서 NULL로 나타내서 그 NULL을 찾아야 하기 때문이다.
# -- 따라서 SELECT도 A를 기준으로 출력해야 한다. (A 관련 DATETIME을 출력해야 하므로)

# # SELECT A.NAME, A.DATETIME
# # FROM ANIMAL_INS A
# #     LEFT JOIN ANIMAL_OUTS B
# # ON A.ANIMAL_ID = B.ANIMAL_ID
# # WHERE B.DATETIME IS NULL
# # ORDER BY A.DATETIME 
# # LIMIT 3

# # -- A에 대해서 찾는 것이므로 LEFT JOIN을 해주어야 하고
# # -- B에서의 DATETIME이 없어야 한다. ID도 또한 같아야 하고,
# # -- A에서의 DATETIME 순서대로 출력하는데 제일 작을 수록 오래있는 것이므로 오름차순으로 한다.
# # -- 3개만 하면 된다.