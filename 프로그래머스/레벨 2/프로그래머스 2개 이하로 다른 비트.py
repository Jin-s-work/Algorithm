def solution(numbers):
    answer = []
    
    # 비트가 2개 이하로 달라야 한다.
    
    # 짝수일 경우
    # 짝수 일경우 맨 마지막이 0이고 그 다음 수가 1이므로
    # 가장 뒤에 있는 0을 1로 바꾸어 주면 된다.
    
    # 홀수일 경우
    # 짝수의 경우 처럼 가장 뒤의 0의 인덱스를 찾아 1로 바꾼다.
    # 그 다음 인덱스+1의 인덱스 값을 0으로 바꾸면 그 다음이 된다.
    # 홀수 -> 짝수 이므로 0에서 그 다음 인덱스를 1로 넘기는 것이다.
    
    for number in numbers:
        k = list('0' + bin(number)[2:])
        idx = ''.join(k).rfind('0')  # rfind는 뒤에서부터 있는지 탐색한다.
        k[idx] = '1'   # 제일 끝의 0을 1로 바꾸는 것이다.
        # 홀수의 경우도 가장 뒤의 idx를 찾아서 그것을 1로 바꾸는 것을 해야 하므로
        # 이는 공통적으로 진행하고
        
        # 홀수 인 경우에는 idx + 1의 값을 0으로 바꾸어 주어야 한다.
        if number % 2 == 1:
            k[idx + 1] = '0'
        # 홀수일 경우에는 앞을 1로 바꾸었으니 그 다음의 인덱스 값을 0으로 바꿔야한다.
            
        answer.append(int(''.join(k), 2))
        # k를 ''를 없애고 붙여주고, 이를 2진수에서 10진수로 바꾸어 준다.
                    
    
    return answer
